CHIP NumBlocks
{
	IN in[16];
	OUT out[16];
	
	PARTS:
	Xor(a = in[0], b = in[1], out = xor1);
	Xor(a = in[1], b = in[2], out = xor2);
	Xor(a = in[2], b = in[3], out = xor3);
	Xor(a = in[3], b = in[4], out = xor4);
	Xor(a = in[4], b = in[5], out = xor5);
	Xor(a = in[5], b = in[6], out = xor6);
	Xor(a = in[6], b = in[7], out = xor7);
	Xor(a = in[7], b = in[8], out = xor8);
	Xor(a = in[8], b = in[9], out = xor9);
	Xor(a = in[9], b = in[10], out = xor10);
	Xor(a = in[10], b = in[11], out = xor11);
	Xor(a = in[11], b = in[12], out = xor12);
	Xor(a = in[12], b = in[13], out = xor13);
	Xor(a = in[13], b = in[14], out = xor14);
	Xor(a = in[14], b = in[15], out = xor15);
	
	
	Add16(a[0] = true, a[1..15] = false, b[1..15] = false, b[0]= xor1, out = bc1 );
	Add16(a = bc1,  b[1..15] = false, b[0]= xor2,  out = bc2);
	Add16(a = bc2,  b[1..15] = false, b[0]= xor3,  out = bc3);
	Add16(a = bc3,  b[1..15] = false, b[0]= xor4,  out = bc4);
	Add16(a = bc4,  b[1..15] = false, b[0]= xor5,  out = bc5);
	Add16(a = bc5,  b[1..15] = false, b[0]= xor6,  out = bc6);
	Add16(a = bc6,  b[1..15] = false, b[0]= xor7,  out = bc7);
	Add16(a = bc7,  b[1..15] = false, b[0]= xor8,  out = bc8);
	Add16(a = bc8,  b[1..15] = false, b[0]= xor9,  out = bc9);
	Add16(a = bc9,  b[1..15] = false, b[0]= xor10, out = bc10);
	Add16(a = bc10, b[1..15] = false, b[0]= xor11, out = bc11);
	Add16(a = bc11, b[1..15] = false, b[0]= xor12, out = bc12);
	Add16(a = bc12, b[1..15] = false, b[0]= xor13, out = bc13);
	Add16(a = bc13, b[1..15] = false, b[0]= xor14, out = bc14);
	Add16(a = bc14, b[1..15] = false, b[0]= xor15, out = out);
	
	
}